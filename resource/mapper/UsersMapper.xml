<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.marry.dao.UsersMapper">
  <resultMap id="BaseResultMap" type="cn.marry.pojo.Users">
    <id column="uid" jdbcType="INTEGER" property="uid" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="userPassword" jdbcType="VARCHAR" property="userpassword" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="userRole" jdbcType="INTEGER" property="userrole" />
    <result column="userImage" jdbcType="VARCHAR" property="userimage" />
    <result column="createdBy" jdbcType="INTEGER" property="createdby" />
    <result column="creationDate" jdbcType="TIMESTAMP" property="creationdate" />
    <result column="modifyBy" jdbcType="INTEGER" property="modifyby" />
    <result column="modifyDate" jdbcType="TIMESTAMP" property="modifydate" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where uid = #{uid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.marry.pojo.Users">
    insert into users (uid, userName, userPassword, 
      sex, birthday, phone, 
      address, userRole, userImage, 
      createdBy, creationDate, modifyBy, 
      modifyDate)
    values (#{uid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{userrole,jdbcType=INTEGER}, #{userimage,jdbcType=VARCHAR}, 
      #{createdby,jdbcType=INTEGER}, #{creationdate,jdbcType=TIMESTAMP}, #{modifyby,jdbcType=INTEGER}, 
      #{modifydate,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.marry.pojo.Users">
    update users
    set userName = #{username,jdbcType=VARCHAR},
      userPassword = #{userpassword,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      userRole = #{userrole,jdbcType=INTEGER},
      userImage = #{userimage,jdbcType=VARCHAR},
      createdBy = #{createdby,jdbcType=INTEGER},
      creationDate = #{creationdate,jdbcType=TIMESTAMP},
      modifyBy = #{modifyby,jdbcType=INTEGER},
      modifyDate = #{modifydate,jdbcType=TIMESTAMP}
    where uid = #{uid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select uid, userName, userPassword, sex, birthday, phone, address, userRole, userImage, 
    createdBy, creationDate, modifyBy, modifyDate
    from users
    where uid = #{uid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select uid, userName, userPassword, sex, birthday, phone, address, userRole, userImage, 
    createdBy, creationDate, modifyBy, modifyDate
    from users
  </select>
  <!-- 定义一个验证登录的方法 -->
	<select id="loginVerification" resultType="Users">
		select * from users where userName=#{username}
		 and userPassword=#{userpassword}
	</select>
</mapper>